# Generated by Django 3.1.3 on 2020-12-08 15:40

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ApplicationForm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_time', models.DateField(verbose_name='From date')),
                ('to_time', models.DateField(verbose_name='To date')),
                ('contract_type', models.PositiveIntegerField(choices=[(1, 'Leasing'), (2, 'Loan')], default=(2, 'Loan'))),
                ('form_status', models.PositiveIntegerField(choices=[(1, 'Активный'), (2, 'Не активен')], default=(1, 'Активный'))),
                ('cr_on', models.DateTimeField(default=django.utils.timezone.now, verbose_name='created on')),
            ],
        ),
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=None, max_length=128, verbose_name='Наименования банка')),
                ('branchName', models.CharField(default=None, max_length=128, null=True, verbose_name='Наименования филиала')),
                ('inn', models.CharField(max_length=20, null=True)),
                ('mfo', models.CharField(default=None, max_length=6, null=True)),
                ('phone_number', models.CharField(default=None, max_length=14, null=True, verbose_name='Номер телефона')),
                ('address', models.CharField(default=None, max_length=1024, verbose_name='Адрес')),
                ('checking_account', models.CharField(default=None, max_length=30, null=True, verbose_name='Расчётный счёт')),
                ('is_exist', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='BasicTariffRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование')),
                ('sum', models.BigIntegerField(verbose_name='Сумма')),
            ],
        ),
        migrations.CreateModel(
            name='Beneficiary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cr_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('up_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_exist', models.BooleanField(default=True)),
                ('cr_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ClientRequestType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1024, verbose_name='Название')),
                ('description', models.CharField(max_length=2048, verbose_name='Описание')),
            ],
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Наименование')),
                ('code', models.CharField(max_length=4, unique=True, verbose_name='Код валюты')),
                ('is_exist', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Валюта',
                'verbose_name_plural': 'Валюты',
            },
        ),
        migrations.CreateModel(
            name='Dt_Option',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codeName', models.CharField(max_length=128, unique=True)),
                ('title', models.CharField(blank=True, max_length=512, null=True)),
                ('dataPath', models.CharField(blank=True, max_length=512, null=True)),
                ('draw', models.IntegerField(blank=True, default=1, null=True)),
                ('keys', models.BooleanField(default=True)),
                ('colReorder', models.BooleanField(default=True)),
                ('fixedHeader', models.BooleanField(default=True)),
                ('responsive', models.BooleanField(default=True)),
                ('autoFill', models.BooleanField(default=True)),
                ('serverSide', models.BooleanField(default=True)),
                ('processing', models.BooleanField(default=True)),
                ('scrollY', models.CharField(default='70vh', max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Human',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(default=None, max_length=14, verbose_name='Номер телефона')),
                ('first_name', models.CharField(default=None, max_length=128, verbose_name='Имя')),
                ('last_name', models.CharField(default=None, max_length=128, verbose_name='Фамилия')),
                ('middle_name', models.CharField(default=None, max_length=128, verbose_name='Отчество')),
                ('address', models.CharField(default=None, max_length=1024, verbose_name='Адрес')),
                ('passport_series', models.CharField(default=None, max_length=3, verbose_name='Паспортная серия')),
                ('passport_number', models.CharField(default=None, max_length=10, verbose_name='Паспортная серия')),
                ('passport_given_date', models.DateField(blank=True, null=True, verbose_name='Дата выдачи паспорта')),
                ('passport_given_by', models.CharField(blank=True, max_length=128, null=True, verbose_name='Паспорт выдан')),
            ],
        ),
        migrations.CreateModel(
            name='InsuranceOffice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('series', models.CharField(default='AAA', max_length=10, verbose_name='Серии')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование')),
                ('contact', models.CharField(blank=True, default=None, max_length=50, null=True, verbose_name='Contact')),
                ('location', models.CharField(default='', max_length=1024, verbose_name='Местонахождение')),
                ('founded_date', models.DateField(null=True, verbose_name='Основан')),
                ('cr_on', models.DateTimeField(auto_now_add=True)),
                ('up_on', models.DateTimeField(auto_now=True)),
                ('is_exist', models.BooleanField(default=True)),
                ('bank', models.ManyToManyField(blank=True, default=None, max_length=3, to='insurance.Bank')),
                ('cr_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='office_cr_by', to=settings.AUTH_USER_MODEL)),
                ('director', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='insurance_director', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LegalClient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование')),
                ('address', models.CharField(max_length=150, verbose_name='Адрес')),
                ('phone_number', models.CharField(max_length=15, verbose_name='Номер телефона')),
                ('client_checking_account', models.CharField(blank=True, default=None, max_length=20, null=True, verbose_name='Расчётный счёт')),
                ('fax', models.CharField(blank=True, default=None, max_length=20, null=True, verbose_name='Fax number')),
                ('inn', models.CharField(blank=True, default=None, max_length=15, verbose_name='INN')),
                ('okohx', models.CharField(blank=True, default=None, max_length=15, verbose_name='OKOHX')),
                ('cr_on', models.DateTimeField(default=None, null=True)),
                ('up_on', models.DateTimeField(default=None, null=True)),
                ('is_exist', models.BooleanField(default=True)),
                ('bank', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='legal_client_bank', to='insurance.bank')),
                ('cr_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('up_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='legal_client_up_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LocationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('description', models.CharField(max_length=1024)),
            ],
        ),
        migrations.CreateModel(
            name='OfficeType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1024, verbose_name='Название')),
                ('description', models.CharField(max_length=2048, verbose_name='Описание')),
            ],
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_name', models.CharField(max_length=50, unique=True)),
                ('title', models.CharField(max_length=50)),
                ('cr_on', models.DateTimeField(auto_now_add=True)),
                ('up_on', models.DateTimeField(auto_now_add=True)),
                ('cr_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('up_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='permission_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PoliciesIncome',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('act_number', models.CharField(max_length=128, unique=True, verbose_name='Номер акта')),
                ('act_date', models.DateTimeField(verbose_name='Дата акта')),
                ('policy_number_from', models.PositiveIntegerField(default=1, verbose_name='Номер полиса с')),
                ('policy_number_to', models.PositiveIntegerField(default=2, verbose_name='Номер полиса до')),
                ('is_free_policy', models.BooleanField(default=False, verbose_name='Свободный')),
                ('document', models.FileField(blank=True, default=None, null=True, upload_to='policies_income', verbose_name='Документ')),
                ('cr_on', models.DateTimeField(auto_now_add=True)),
                ('cr_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='policies_income_cr_by', to=settings.AUTH_USER_MODEL)),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='policies_income_up_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Поступления полис',
                'verbose_name_plural': 'Поступления полисы',
            },
        ),
        migrations.CreateModel(
            name='Policy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_free_generated', models.BooleanField(default=False, verbose_name='Свободный')),
                ('policy_number', models.PositiveIntegerField(verbose_name='Номер')),
                ('client_type', models.PositiveIntegerField(blank=True, choices=[(1, 'Физическое лицо'), (2, 'Юридик лицо')], default=None, verbose_name='Тип клиента')),
                ('date_from', models.DateField(blank=True, default=None, null=True)),
                ('date_to', models.DateField(blank=True, default=None, null=True)),
                ('goal', models.CharField(blank=True, default=None, max_length=2048, null=True)),
                ('zone', models.CharField(blank=True, default=None, max_length=256, null=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('beneficiary', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='insurance.beneficiary')),
                ('income_session', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='insurance.policiesincome', verbose_name='Policies income session')),
                ('pledger', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='insurance.legalclient')),
            ],
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Наименование')),
                ('is_exist', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Должность',
                'verbose_name_plural': 'Должность',
            },
        ),
        migrations.CreateModel(
            name='ProductFieldClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=512)),
                ('description', models.CharField(default='', max_length=1024)),
            ],
        ),
        migrations.CreateModel(
            name='ProductTypeCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=15, verbose_name='Класс')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование')),
                ('description', models.CharField(max_length=6000, verbose_name='Описание')),
                ('is_exist', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Наименование')),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='SimpleField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('input_type', models.PositiveIntegerField(choices=[(1, 'Text'), (2, 'Number'), (3, 'Single selection'), (4, 'Multi selection'), (5, 'Currency'), (6, 'Date'), (7, 'Boolean')], default=(1, 'Text'))),
                ('value', models.CharField(blank=True, default=None, max_length=4096, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VehicleApplicationFormAdditional',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(blank=True, default=None, max_length=256, null=True)),
                ('title', models.CharField(blank=True, default=None, max_length=256, null=True)),
                ('number_series', models.CharField(blank=True, default=None, max_length=256, null=True)),
                ('price', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='VehicleApplicationFormHazard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default=None, max_length=256, null=True)),
                ('status', models.BooleanField(default=False)),
                ('price', models.FloatField(default=0, verbose_name='Сумма')),
                ('bottom_price', models.FloatField(default=0, verbose_name='Франшиза')),
            ],
        ),
        migrations.CreateModel(
            name='VehicleApplicationItemForm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(blank=True, default=None, max_length=256, null=True)),
                ('release_date', models.DateField(blank=True, default=None, null=True)),
                ('state_number', models.CharField(blank=True, default=None, max_length=16, null=True)),
                ('passport_tech_number', models.CharField(blank=True, default=None, max_length=16, null=True)),
                ('engine_number', models.CharField(blank=True, default=None, max_length=16, null=True)),
                ('body_number', models.CharField(blank=True, default=None, max_length=16, null=True)),
                ('lifting_capacity', models.FloatField(blank=True, default=0)),
                ('seat_number', models.PositiveIntegerField(blank=True, default=0)),
                ('price', models.FloatField(default=0)),
                ('awarded_price', models.FloatField(default=0)),
                ('additional', models.ManyToManyField(to='insurance.VehicleApplicationFormAdditional')),
                ('application_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='insurance.applicationform')),
                ('hazards', models.ManyToManyField(to='insurance.VehicleApplicationFormHazard')),
            ],
        ),
        migrations.CreateModel(
            name='VehicleApplicationForm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('based_on', models.CharField(blank=True, default=None, max_length=256, null=True)),
                ('geo_location', models.CharField(blank=True, default=None, max_length=256, null=True)),
                ('application_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='insurance.applicationform')),
            ],
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cr_on', models.DateTimeField(auto_now_add=True)),
                ('cr_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userrole_created_by', to=settings.AUTH_USER_MODEL)),
                ('role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='insurance.role')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Отчество')),
                ('phone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Тел')),
                ('image', models.ImageField(blank=True, null=True, upload_to='users', verbose_name='Фото')),
                ('passport_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Паспорт номер')),
                ('passport_series', models.CharField(blank=True, max_length=50, null=True, verbose_name='Паспортная серия')),
                ('passport_given_date', models.DateField(blank=True, null=True, verbose_name='Дата выдачи паспорта')),
                ('passport_given_by', models.CharField(blank=True, max_length=128, null=True, verbose_name='Паспорт выдан')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('document', models.FileField(blank=True, null=True, upload_to='user/documents', verbose_name='Document')),
                ('created_by', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='profile_created_by', to=settings.AUTH_USER_MODEL)),
                ('position', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='insurance.position', verbose_name='Должность')),
                ('updated_by', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='profile_updated_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=15, null=True, verbose_name='Код')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование')),
                ('client_type', models.PositiveIntegerField(choices=[(1, 'Физическое лицо'), (2, 'Юридик лицо')], default=(2, 'Юридик лицо'), verbose_name='Тип клиента')),
                ('price_bounty_percentage', models.FloatField(blank=True, default=1)),
                ('has_beneficiary', models.BooleanField(default=False, verbose_name='Has beneficiary')),
                ('has_pledger', models.BooleanField(default=False, verbose_name='Has pledger')),
                ('min_acceptable_amount', models.FloatField(default=0, verbose_name='Minimum acceptable amount')),
                ('max_acceptable_amount', models.FloatField(default=9999, verbose_name='Minimum acceptable amount')),
                ('is_exist', models.BooleanField(default=True)),
                ('classes', models.ManyToManyField(blank=True, default=[], max_length=3, to='insurance.ProductTypeCode')),
            ],
        ),
        migrations.CreateModel(
            name='ProductField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input_type', models.PositiveIntegerField(choices=[(1, 'Text'), (2, 'Number'), (3, 'Single selection'), (4, 'Multi selection'), (5, 'Currency'), (6, 'Date'), (7, 'Boolean')], default=(1, 'Text'))),
                ('is_required', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=128)),
                ('value', models.CharField(blank=True, default=None, max_length=4096, null=True)),
                ('value_description', models.CharField(blank=True, default=None, max_length=4096, null=True)),
                ('order', models.IntegerField(blank=True, null=True)),
                ('extra_fields', models.ManyToManyField(default=[], related_name='product_field_extra_fields', to='insurance.SimpleField')),
                ('field_class', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_field_class', to='insurance.productfieldclass')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_field', to='insurance.producttype')),
            ],
        ),
        migrations.CreateModel(
            name='PolicyTransfers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cr_on', models.DateTimeField(auto_now_add=True)),
                ('cr_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='policy_transfers_cr_by', to=settings.AUTH_USER_MODEL)),
                ('policy', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='insurance.policy')),
                ('to_office', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='policy_transfer_to_office', to='insurance.insuranceoffice')),
            ],
        ),
        migrations.CreateModel(
            name='PolicySeriesType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=24, verbose_name='Код')),
                ('cr_on', models.DateTimeField(auto_now_add=True)),
                ('cr_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='policy_series_cr_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Серии полиса',
                'verbose_name_plural': 'Серии полисов',
            },
        ),
        migrations.CreateModel(
            name='PolicyRetransfer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cr_on', models.DateTimeField(auto_now_add=True)),
                ('cr_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='policy_retransfer_cr_by', to=settings.AUTH_USER_MODEL)),
                ('to_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('transfer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='policy_retransfer_transfer_parent', to='insurance.policytransfers')),
            ],
        ),
        migrations.AddField(
            model_name='policy',
            name='product',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='insurance.producttype'),
        ),
        migrations.AddField(
            model_name='policy',
            name='series',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='insurance.policyseriestype'),
        ),
        migrations.AddField(
            model_name='policiesincome',
            name='policy_series',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='insurance.policyseriestype', verbose_name='Серии полиса'),
        ),
        migrations.CreateModel(
            name='PermissionUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grant', models.BooleanField(default=False)),
                ('cr_on', models.DateTimeField(auto_now_add=True)),
                ('cr_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='permissionuser_created_by', to=settings.AUTH_USER_MODEL)),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='insurance.permission')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PermissionRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grant', models.BooleanField(default=True)),
                ('cr_on', models.DateTimeField(auto_now_add=True)),
                ('cr_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='insurance.permission')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='insurance.role')),
            ],
        ),
        migrations.CreateModel(
            name='OfficeWorkers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cr_on', models.DateTimeField(auto_now_add=True)),
                ('up_on', models.DateTimeField(auto_now=True)),
                ('cr_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='office_workers_cr_by', to=settings.AUTH_USER_MODEL)),
                ('office', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='office_workers_office', to='insurance.insuranceoffice')),
                ('up_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='office_workers_up_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='office_workers_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('series', models.CharField(default=None, max_length=10)),
                ('name', models.CharField(max_length=512)),
                ('is_active', models.BooleanField(default=True)),
                ('type', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='insurance.locationtype')),
            ],
        ),
        migrations.AddField(
            model_name='insuranceoffice',
            name='office_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='insurance.officetype'),
        ),
        migrations.AddField(
            model_name='insuranceoffice',
            name='parent',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='insurance.insuranceoffice'),
        ),
        migrations.AddField(
            model_name='insuranceoffice',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='insurance.location'),
        ),
        migrations.AddField(
            model_name='insuranceoffice',
            name='up_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='office_up_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='GridCols',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=256, null=True)),
                ('data', models.CharField(blank=True, max_length=128, null=True)),
                ('name', models.CharField(blank=True, max_length=128, null=True)),
                ('type', models.CharField(blank=True, max_length=128, null=True)),
                ('width', models.IntegerField(blank=True, null=True)),
                ('searchable', models.BooleanField(default=True)),
                ('orderable', models.BooleanField(default=True)),
                ('className', models.CharField(blank=True, max_length=128, null=True)),
                ('defaultContent', models.CharField(blank=True, max_length=1024, null=True)),
                ('visible', models.BooleanField(default=True)),
                ('order_num', models.IntegerField(blank=True, null=True)),
                ('table', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='columns', to='insurance.dt_option')),
            ],
            options={
                'ordering': ['order_num'],
            },
        ),
        migrations.CreateModel(
            name='ClientRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('policy_number', models.CharField(max_length=100)),
                ('policy_series', models.CharField(max_length=100)),
                ('reason', models.CharField(max_length=4000, verbose_name='Причина увеличения лимитов')),
                ('file', models.FileField(blank=True, default=None, null=True, upload_to='client_requests', verbose_name='Документ')),
                ('comment', models.CharField(max_length=4000, verbose_name='Комментарий')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Одобрено')),
                ('cr_on', models.DateTimeField(auto_now_add=True)),
                ('up_on', models.DateTimeField(auto_now_add=True)),
                ('assigned_to', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Назначен')),
                ('request_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='insurance.clientrequesttype', verbose_name='Тип запроса')),
                ('up_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_request_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='beneficiary',
            name='legal',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='legal', to='insurance.legalclient'),
        ),
        migrations.AddField(
            model_name='beneficiary',
            name='up_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='beneficiary_up_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='applicationform',
            name='beneficiary',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='application_form_beneficiary', to='insurance.beneficiary'),
        ),
        migrations.AddField(
            model_name='applicationform',
            name='created_by',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='application_form_created_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='applicationform',
            name='edited_by',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='application_form_edited_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='applicationform',
            name='legal_client',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='insurance.legalclient'),
        ),
        migrations.AddField(
            model_name='applicationform',
            name='pledger',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='application_form_pledger', to='insurance.legalclient'),
        ),
        migrations.AddField(
            model_name='applicationform',
            name='product_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='insurance.producttype'),
        ),
        migrations.CreateModel(
            name='ProductApplicationField',
            fields=[
                ('productfield_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='insurance.productfield')),
                ('application_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='insurance.applicationform')),
            ],
            bases=('insurance.productfield',),
        ),
        migrations.CreateModel(
            name='IndividualClient',
            fields=[
                ('human_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='insurance.human')),
                ('client_checking_account', models.CharField(blank=True, default=None, max_length=20, null=True, verbose_name='Расчётный счёт')),
                ('inn', models.CharField(blank=True, default=None, max_length=15, verbose_name='INN')),
                ('cr_on', models.DateTimeField(auto_now_add=True)),
                ('up_on', models.DateTimeField(auto_now_add=True)),
                ('is_exist', models.BooleanField(default=True)),
                ('bank', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='individual_client_bank', to='insurance.bank')),
                ('cr_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('up_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='individual_client_up_by', to=settings.AUTH_USER_MODEL)),
            ],
            bases=('insurance.human',),
        ),
        migrations.AddField(
            model_name='beneficiary',
            name='individual',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='beneficiary_individual', to='insurance.individualclient'),
        ),
        migrations.AddField(
            model_name='applicationform',
            name='individual_client',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='insurance.individualclient'),
        ),
    ]
